(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{389:function(a,e,t){"use strict";t.r(e);var s=t(42),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"can-bus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-bus"}},[a._v("#")]),a._v(" CAN bus")]),a._v(" "),t("h2",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),t("h3",{attrs:{id:"can-interface-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#can-interface-setup"}},[a._v("#")]),a._v(" CAN interface setup")]),a._v(" "),t("p",[a._v("There are different USB to CAN dongles available on the market, which usually support communicating with the Linux Kernel via a serial interface.")]),a._v(" "),t("p",[a._v("The following command creates a "),t("code",[a._v("can0")]),a._v(" interface from a dongle attached to "),t("code",[a._v("/dev/ttyUSB0")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("sudo slcan_attach /dev/ttyUSB0 -w\n")])])]),t("p",[a._v("Afterwards, the interface has to be configured and started. Here we are setting the bit rate to 500 kbit/s:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("sudo ip link set can0 type can bitrate 500000 restart-ms 500\nsudo ip link set can0 up\n")])])]),t("p",[a._v("If you want to see also your own messages, loopback mode has to be enabled before setting the interface up:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("sudo ip link set can0 type can loopback on\n")])])]),t("p",[a._v("Now, "),t("code",[a._v("candump")]),a._v(" can be used to read all data available on the bus:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("candump can0\n")])])]),t("h3",{attrs:{id:"iso-tp-tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iso-tp-tools"}},[a._v("#")]),a._v(" ISO-TP tools")]),a._v(" "),t("p",[a._v("The Linux kernel "),t("a",{attrs:{href:"https://github.com/hartkopp/can-isotp",target:"_blank",rel:"noopener noreferrer"}},[a._v("supports CAN ISO-TP"),t("OutboundLink")],1),a._v(", which is used as the transport protocol for ThingSet.")]),a._v(" "),t("p",[a._v("Assuming a device with CAN address 10 is connected to the bus, the following command sets up an ISO-TP channel for messages from the device to the host computer (CAN address 0):")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("isotprecv -l -s 0x1ada0a00 -d 0x1ada000a can0\n")])])]),t("p",[a._v("In order to send a binary command to device with address 10, run the following command:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('echo "01 18 70 A0" | isotpsend -s 0x1ada0a00 -d 0x1ada000a can0\n')])])]),t("p",[a._v("The same for text mode:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('echo -n "?output" | hexdump -v -e \'/1 "%02X "\' | isotpsend -s 0x1ada0a00 -d 0x1ada000a can0\n')])])]),t("p",[t("code",[a._v("isotprecv")]),a._v(" only prints the hex values of the received data. The ASCII payload can be monitored using:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("isotpsniffer -tA -f 2 -d 0x1ada0a00 -s 0x1ada000a can0\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{385:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"thingset-to-http-mapping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thingset-to-http-mapping"}},[t._v("#")]),t._v(" ThingSet to HTTP mapping")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("This part of the protocol specification is still work in progress.")])]),t._v(" "),a("h2",{attrs:{id:"key-concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-concepts"}},[t._v("#")]),t._v(" Key concepts")]),t._v(" "),a("p",[t._v("ThingSet is developed for point-to-point connections or small local networks, but the protocol functions were developed such that they can be easily integrated into larger networks or the internet using an HTTP gateway.")]),t._v(" "),a("p",[t._v("Many web applications interact using JSON APIs (sometimes in a RESTful way), so the compatibility with JSON web APIs is an important feature of the ThingSet protocol.")]),t._v(" "),a("p",[t._v("In order to reduce the complexity of the protocol, the features offered by HTTP were reduced:")]),t._v(" "),a("ul",[a("li",[t._v("Convention over configuration\n"),a("ul",[a("li",[t._v("Only two content-types JSON and CBOR are supported. They are detected automatically and no content-type header is needed.")]),t._v(" "),a("li",[t._v("Predefined URI layout matching the data structure.")]),t._v(" "),a("li",[t._v("Unit of data objects stored in the name (key) of a map, so the required amount of nesting in the JSON data structure is limited to categories only.")])])])]),t._v(" "),a("p",[t._v("The response codes of ThingSet are aligned with CoAP and thus also allow a simple translation to HTTP. The main difference is that HTTP doesn't allow to indicate successful requests as fine-grained as CoAP, so the status will be mostly 200 OK or 204 No Content.")]),t._v(" "),a("h2",{attrs:{id:"data-processing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-processing"}},[t._v("#")]),t._v(" Data Processing")]),t._v(" "),a("h3",{attrs:{id:"http-via-can"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-via-can"}},[t._v("#")]),t._v(" HTTP via CAN")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Dev     CAN:txt     GW   HTTP:txt   Web App\n |                  |                  |\n |                  |   req objects    |\n |   req objects    | <--------------- |\n | <--------------- |                  |\n |   resp objects   |                  |\n | ---------------\x3e |   resp objects   |\n |                  | ---------------\x3e |\n")])])]),a("h3",{attrs:{id:"http-via-serial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-via-serial"}},[t._v("#")]),t._v(" HTTP via Serial")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Dev    UART:txt     GW   HTTP:txt   Web App\n |                  |                  |\n |                  |   req objects    |\n |   req objects    | <--------------- |\n | <--------------- |                  |\n |   resp objects   |                  |\n | ---------------\x3e |   resp objects   |\n |                  | ---------------\x3e |\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9277],{3799:(e,t,a)=>{a.r(t),a.d(t,{data:()=>r});const r={key:"v-d51f18aa",path:"/spec/v0.5/transp_lorawan.html",title:"LoRaWAN",lang:"en",frontmatter:{title:"LoRaWAN"},excerpt:"",headers:[{level:2,title:"Port mapping",slug:"port-mapping",children:[]},{level:2,title:"Open questions",slug:"open-questions",children:[]}],filePathRelative:"spec/v0.5/transp_lorawan.md",git:{updatedTime:1707227927e3}}},6078:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var r=a(6252);const o=(0,r.uE)('<h1 id="thingset-via-lorawan" tabindex="-1"><a class="header-anchor" href="#thingset-via-lorawan" aria-hidden="true">#</a> ThingSet via LoRaWAN</h1><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>This part of the protocol specification is still work in progress.</p></div><p>As the data rate of LoRa is very low, only the binary protocol version is supported.</p><p>The ThingSet mapping is optimized for Class A devices, which allow only a very limited amount of downlink messages from the gateway to the device. This means that a request/response model is not suitable over LoRaWAN.</p><p>Instead, the communication mainly relies on statements sent from the device to the gateway.</p><h2 id="port-mapping" tabindex="-1"><a class="header-anchor" href="#port-mapping" aria-hidden="true">#</a> Port mapping</h2><p>LoRaWAN supports to specify a so-called port for each message to differentiate between different types of payload. The port can be an integer in the range of 1..223 (0x01..0xDF).</p><p>The ports are mapped to the ThingSet data object IDs and only IDs from 0x01..0x3F are used for communication via LoRaWAN.</p><p>Only the values are communicated regularly. The corresponding IDs for each statement are sent only once during startup to the port with ID + 0x40.</p><p>The following table gives an overview of the LoRaWAN ports as they are planned to be used for ThingSet:</p><table><thead><tr><th>Port(s)</th><th>Usage</th></tr></thead><tbody><tr><td>0x00</td><td>Reserved for LoRaWAN MAC messages</td></tr><tr><td>0x01..0x3F</td><td>ThingSet statement values (corresponding to ID of group or subset)</td></tr><tr><td>0x40</td><td>Reserved for future use in ThingSet</td></tr><tr><td>0x41..0x7F</td><td>ThingSet statement IDs (corresponding to ID + 0x40)</td></tr><tr><td>0x80..0xBF</td><td>ThingSet statement key/value pairs (corresponding to ID + 0x80)</td></tr><tr><td>0xC0..0xDF</td><td>ThingSet request/response channels</td></tr><tr><td>0xE0..0xFF</td><td>Reserved for LoRaWAN</td></tr></tbody></table><p>Remark: key/value ports are necessary so that event statements don&#39;t have to transfer also the values of the subset that didn&#39;t change.</p>',12),n={href:"https://lupyuen.github.io/articles/payload",target:"_blank",rel:"noopener noreferrer"},s=(0,r.Uk)("JavaScript CBOR payload decoder"),i=(0,r.Uk)("."),d=(0,r._)("h2",{id:"open-questions",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#open-questions","aria-hidden":"true"},"#"),(0,r.Uk)(" Open questions")],-1),p=(0,r._)("ul",null,[(0,r._)("li",null,"How to transfer data object names?"),(0,r._)("li",null,"How to transfer node ID?")],-1),l={render:function(e,t){const a=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[o,(0,r._)("p",null,[(0,r._)("a",n,[s,(0,r.Wm)(a)]),i]),d,p],64)}}}}]);